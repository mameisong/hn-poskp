<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.cycs.poskp</groupId>
  <artifactId>hn-poskp</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <description>pos机开票壳系统</description>
  <properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<spring-cloud.version>Greenwich.SR1</spring-cloud.version>
		<mybatis-spring-boot-starter.version>1.3.2</mybatis-spring-boot-starter.version>
		<druid-spring-boot-starter.version>1.1.10</druid-spring-boot-starter.version>
		<pagehelper-spring-boot-starter.version>1.2.5</pagehelper-spring-boot-starter.version>
		<guava.version>26.0-jre</guava.version>
		<fastjson.version>1.2.54</fastjson.version>
		<ojdbc.version>12.2.0.1</ojdbc.version>
		<protostuff.version>1.0.7</protostuff.version>
		<jwt.version>3.2.0</jwt.version>
		<bcprov-jdk15.version>1.46</bcprov-jdk15.version>
		<jsoup.version>1.8.3</jsoup.version>
		<google.zxing.version>3.3.0</google.zxing.version>
		<lcn.last.version>4.1.2</lcn.last.version>
		<shiro.version>1.4.0</shiro.version>
		<oracle.ojdbc.version>1.4</oracle.ojdbc.version>
		<activation.version>1.1.1</activation.version>
		<common.version>1.0-SNAPSHOT</common.version>
		<poi.version>4.1.0</poi.version>
		<swagger.version>2.8.0</swagger.version>
	</properties>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.4.RELEASE</version>
		<relativePath />
	</parent>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<!-- 应用监控 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!-- 配置中心 start -->
		<!-- <dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency> -->
		<!-- 配置中心 end -->
		<!-- spring-cloud-bus start -->
		<!-- <dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-bus-kafka</artifactId>
		</dependency> -->
		<!-- spring-cloud-bus end -->
		<!-- 服务熔断-断路器-监控 start -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-hystrix-dashboard</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
		</dependency>
		<!-- 服务熔断-断路器-监控 end -->
		<!-- rest-feign方式服务调用/集成了负载均衡 ribbon start -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
		</dependency>
		<!-- rest-feign方式服务调用/集成了负载均衡 ribbon end -->
		<!-- web相关 start -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- web相关 end -->
		<!-- 注册中心client start -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>
		<!-- 注册中心client end -->
		<!-- https://mvnrepository.com/artifact/com.alibaba/fastjson -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>${fastjson.version}</version>
		</dependency>
		<!-- jackson jar -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.9.4</version>
		</dependency>
		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>okhttp</artifactId>
		</dependency>
		<!-- spring默认使用yml中的配置，但有时候要用传统的xml或properties配置，就需要使用spring-boot-configuration-processor了 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
      <dependency>
           <groupId>com.github.pagehelper</groupId>
           <artifactId>pagehelper-spring-boot-starter</artifactId>
           <version>${pagehelper-spring-boot-starter.version}</version>
       </dependency>
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>${mybatis-spring-boot-starter.version}</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid-spring-boot-starter</artifactId>
			<version>${druid-spring-boot-starter.version}</version>
		</dependency>
		<!-- <dependency>
			<groupId>com.cycs.common</groupId>
			<artifactId>cycs-redis</artifactId>
			<version>1.0-SNAPSHOT</version>
		</dependency> -->
		<!-- ojdbc8 -->
		<dependency>
			<groupId>com.github.noraui</groupId>
			<artifactId>ojdbc8</artifactId>
			<version>12.2.0.1</version>
		</dependency>
		<!-- spring默认使用yml中的配置，但有时候要用传统的xml或properties配置，就需要使用spring-boot-configuration-processor了 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
	</dependencies>
	<build>
		<finalName>hn-poskp-server</finalName>
		<plugins>
			<!-- 打jar包 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>**/*.properties</exclude>
						<exclude>**/*.xml</exclude>
						<exclude>**/*.yml</exclude>
						<exclude>*.txt</exclude>
						<exclude>static/**</exclude>
						<exclude>mapper/**</exclude>
						<exclude>templates/**</exclude>
					</excludes>
					<archive>
						<manifest>
							<!-- 指定Springboot程序启动类 -->
							<mainClass>com.cycs.poskp.PosKpApplication</mainClass>
							<addClasspath>true</addClasspath>
							<!-- 指定依赖的jar包相对于本程序lib的位置 -->
							<classpathPrefix>lib/</classpathPrefix>
						</manifest>
						<manifestEntries>
							<!-- MANIFEST.MF 中 Class-Path 加入资源文件目录 -->
							<Class-Path>./resources/${project.build.finalName}/</Class-Path>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<!-- 该插件的作用是用于复制依赖的jar包到指定的文件夹里 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<type>jar</type>
							<includeTypes>jar</includeTypes>
							<useBaseVersion>false</useBaseVersion>
							<outputDirectory>
								${project.build.directory}/lib
							</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- 拷贝资源文件 -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/resources/${project.build.finalName}</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>